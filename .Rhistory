mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
#  user_data_features <- add_spotify_features(spotify_key, spotify_secret, last_fm_data_id)
}
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data)
reprex::reprex()
reprex::reprex()
last_fm_data
str(last_fm_data)
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data)
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_data_id <- last_fm_data %>%
rowwise() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
#  user_data_features <- add_spotify_features(spotify_key, spotify_secret, last_fm_data_id)
}
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data)
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data[1,])
str(test2)
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
frame <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
id <- frame$id[1]
return(id)
}
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_data_id <- last_fm_data %>%
rowwise() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
#  user_data_features <- add_spotify_features(spotify_key, spotify_secret, last_fm_data_id)
}
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data)
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
library(tidyr)
library(purrr)
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_data_id <- last_fm_data %>%
pmap(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
#  user_data_features <- add_spotify_features(spotify_key, spotify_secret, last_fm_data_id)
}
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data)
my_data <- get_user_data("j4yr0u93")
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
#garbage
#user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
my_data <- get_user_data("j4yr0u93")
library(dplyr)
my_data <- get_user_data("j4yr0u93")
test2 <- spotify_features(spotify_key, spotify_secret, last_fm_data)
last_fm_raw
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
#garbage
#user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
###
#get audio features and other relevant info
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_data_id <- last_fm_data %>%
pmap(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
#  user_data_features <- add_spotify_features(spotify_key, spotify_secret, last_fm_data_id)
}
#lookup track id with track, artist, and album name
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
frame <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
id <- frame$id[1]
return(id)
}
#iterate through ID an join traack feature with main tbl
add_spotify_features <- function(spotify_key, spotify_secret, last_fm_data_id){
for (id in last_fm_data_id) {
features <- spotifyr::get_track_audio_features(id = id, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
full_join(last_fm_data_id, features)
}
}
?spotifyr::search_spotify
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
id <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))$id[1]
return(id)
}
?spotifyr::get_track_audio_features()
library(tidyr)
library(purrr)
library(dplyr)
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
return(user_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
###
#get audio features and other relevant info
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_ids <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct() %>%
rowwise() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
return(last_fm_ids)
}
my_data <- get_user_data("j4yr0u93")
last_fm_raw
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
last_fm_ids <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
API_keys <- RcppTOML::parseToml("API_keys.toml")
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
last_fm_ids <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
?grep
grep(pattern = NA, last_fm_data)
last_fm_data[is.na.data.frame(last_fm_data)]
is.na.data.frame(last_fm_data)
sum(is.na.data.frame(last_fm_data))
sum(!is.na.data.frame(last_fm_data))
track = "dank"
artist = "meme"
album = "bruh"
spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))$id[1]
?if_else
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(is.na(result), id = NA, id = result$id[1])
id
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(is.na(result), track_id = NA, track_id = result$id[1])
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
ifelse(is.na(result), track_id = NA, track_id = result$id[1])
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(is.na(result), track_id = NA, track_id = result$id[1], NULL = NA)
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(is.na(result), track_id = NA, track_id = result$id[1], missing = NA)
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(result == NA, track_id = NA, track_id = result$id[1], missing = NA)
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(is.na(result), break, track_id = result$id[1], missing = NA)
track = "dank"
artist = "meme"
album = "bruh"
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
if_else(is.na(result), next(), track_id = result$id[1])
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
track_id <- if_else(is.na(result), NA, result$id[1])
result
track_id <- if_else(is_empty(result), NA, result$id[1])
result
result
track_id <- if_else(nrow(result) == 0, NA, result$id[1])
track_id <- if_else(nrow(result) == 0, NA, result$id[1])
track_id <- if_else(nrow(result) == 0, NA, result$id[1])
nrow(result) == 0
track_id <- if_else(nrow(result) == 0, potato, result$id[1])
track_id <- if_else(nrow(result) == 0, potato, carrot)
track_id <- if_else(nrow(result) == 0, "potato", "carrot")
track_id
if(nrow(result) == 0){
track_id = NA
} else {
track_id = result$id[1]
}
if(nrow(result) == 0){
track_id = NA
} else {
track_id = TRUE
}
if(nrow(result) == 0){
track_id = FALSE
} else {
track_id = TRUE
}
id <- c(NA)
id <- c(NA)
no_ret <- data.frame(id)
if(nrow(result) == 0){
result = no_ret
}
track_id <- result$id[1]
track_id
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
#get spotify search results
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
#create df for non-results
id <- c(NA)
no_ret <- data.frame(id)
#see if result is empty and create df with id == NA
if(nrow(result) == 0){
result = no_ret
}
#set track_id to result id val
track_id <- result$id[1]
return(id)
}
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_ids <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct() %>%
rowwise() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
return(last_fm_ids)
}
last_fm_ids <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct() %>%
rowwise() %>%
mutate(id = track_id_lookup(track, artist, album, spotify_key, spotify_secret))
length(last_fm_terms) %//% 100
ceiling(length(last_fm_terms)/100)
last_fm_terms <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct()
ceiling(length(last_fm_terms)/100)
length(last_fm_terms)
str(last_fm_terms)
ceiling(nrow(last_fm_terms)/100)
str(last_fm_data)
last_fm_terms
str(last_fm_terms)
last_fm_terms <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct()
library(tidyr)
library(purrr)
library(dplyr)
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
return(user_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
###
#get audio features and other relevant info
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_terms <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct()
last_fm_ids <- crossing(last_fm_terms, lapply(last_fm_terms, track_id_lookup(track, artist, album, spotify_key, spotify_secret)))
return(last_fm_ids)
}
#lookup track id with track, artist, and album name
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
#get spotify search results
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
#create df for non-results
id <- c(NA)
no_ret <- data.frame(id)
#see if result is empty and create df with id == NA
if(nrow(result) == 0){
result = no_ret
}
#set track_id to result id val
track_id <- result$id[1]
return(track_id)
}
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
return(user_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
###
#get audio features and other relevant info
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_terms <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct()
last_fm_ids <- last_fm_terms %>%
crossing(track_id_lookup(track, artist, album, spotify_key, spotify_secret)))
return(last_fm_ids)
}
#lookup track id with track, artist, and album name
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
#get spotify search results
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
#create df for non-results
id <- c(NA)
no_ret <- data.frame(id)
#see if result is empty and create df with id == NA
if(nrow(result) == 0){
result = no_ret
}
#set track_id to result id val
track_id <- result$id[1]
return(track_id)
}
library(tidyr)
library(purrr)
library(dplyr)
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
return(user_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
###
#get audio features and other relevant info
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_terms <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct()
last_fm_ids <- last_fm_terms %>%
crossing(lapply(track_id_lookup(track, artist, album, spotify_key, spotify_secret)))
return(last_fm_ids)
}
#lookup track id with track, artist, and album name
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
#get spotify search results
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
#create df for non-results
id <- c(NA)
no_ret <- data.frame(id)
#see if result is empty and create df with id == NA
if(nrow(result) == 0){
result = no_ret
}
#set track_id to result id val
track_id <- result$id[1]
return(track_id)
}
library(tidyr)
library(purrr)
library(dplyr)
#function to get user music data and clean it
get_user_data <- function(userID){
#get keys from TOML
API_keys <- RcppTOML::parseToml("API_keys.toml")
#assign key
lastfm_key <- API_keys$keys$lastfm_API_key
#pull lastfm timestamps and plaintext info
last_fm_data <- last_fm_pull(lastfm_key, userID)
#assign keys
spotify_key <- API_keys$keys$spotify_API_key
spotify_secret <- API_keys$keys$spotify_secret
user_data <- spotify_features(spotify_key, spotify_secret, last_fm_data)
return(user_data)
}
#function to pull last_fm_data
last_fm_pull <- function(lastfm_key, userID){
last_fm_raw <- scrobbler::download_scrobbles(username = userID, api_key = lastfm_key)
last_fm_data <- last_fm_raw %>%
rename(track = song_title) %>%
mutate(posix_date_time = as.POSIXct(as.numeric(date_unix), origin = '1970-01-01', tz = 'ET')) %>%
mutate(date = as.Date(posix_date_time)) %>%
mutate(dow = factor(weekdays(date), ordered = TRUE, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
select(-c("song_mbid", "artist_mbid", "album_mbid"))
}
###
#get audio features and other relevant info
spotify_features <- function(spotify_key, spotify_secret, last_fm_data){
last_fm_terms <- last_fm_data %>%
select(-c("date", "posix_date_time", "dow", "date_unix")) %>%
distinct()
last_fm_ids <- last_fm_terms %>%
crossing(lapply(track_id_lookup(track, artist, album, spotify_key, spotify_secret)))
return(last_fm_ids)
}
#lookup track id with track, artist, and album name
track_id_lookup <- function(track, artist, album, spotify_key, spotify_secret){
#get spotify search results
result <- spotifyr::search_spotify(paste(track, artist, album, sep = " "), type = "track", limit = 1, authorization = spotifyr::get_spotify_access_token(spotify_key, spotify_secret))
#create df for non-results
id <- c(NA)
no_ret <- data.frame(id)
#see if result is empty and create df with id == NA
if(nrow(result) == 0){
result = no_ret
}
#set track_id to result id val
track_id <- result$id[1]
return(track_id)
}
my_data <- get_user_data("j4yr0u93")
